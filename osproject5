 /* 5 Question -> ROUND ROBIN SCHEDULING */


#include<stdio.h>
#include<conio.h>
int main()
{
 int TQUANT,pid[10],ne1[10],waittime[10],tnartm[10],i,j,n,n1;
 int BT[10],flg[10],Ttnartm=0,Twaittime=0;
 float Awaittime,Atnartm;
printf("\t ROUND ROBIN SCHEDULING\n"); 
printf("Enter the number of Processes-\n");
 scanf("%d",&n);
 n1=n;
 printf("\n Enter the Time Quantum \n");
 scanf("%d",&TQUANT);
 for(i=1;i<=n;i++)
{
printf("\n Enter the process ID %d-",i);
scanf("%d",&pid[i]);
printf("\n Enter the Burst Time of the process-");
scanf("%d",&BT[i]);
ne1[i]=BT[i];
}
for(i=1;i<=n;i++)
{
  flg[i]=1;
  waittime[i]=0;
 }
while(n!=0)
 {
   for(i=1;i<=n;i++)
   {
     if(ne1[i]>=TQUANT)
     {
	 for(j=1;j<=n;j++)
       {
	  if((i!=j)&&(flg[i]==1)&&(ne1[j]!=0))
	  waittime[j]+=TQUANT;
       }
 ne1[i]-=TQUANT;
 if(ne1[i]==0)
{
flg[i]=0;
n--;
}
}
else
{
  for(j=1;j<=n;j++)
      {
	  if((i!=j)&&(flg[i]==1)&&(ne1[j]!=0))
	  waittime[j]+=ne1[i];
       }
ne1[i]=0;
n--;
flg[i]=0;
}
 }
}
for(i=1;i<=n1;i++)
{
tnartm[i]=waittime[i]+BT[i];
Twaittime=Twaittime+waittime[i];
Ttnartm=Ttnartm+tnartm[i];
}
Awaittime=(float)Twaittime/n1;
Atnartm=(float)Ttnartm/n1;
printf("\n\n ROUND ROBIN SCHEDULING ALGORITHM \n\n");
printf("\n\n Process \t Process ID  \t BurstTime \t Waiting Time \t TurnaroundTime \n ");
for(i=1;i<=n1;i++)
{
printf("\n %5d \t\t %5d \t\t %5d \t\t %5d \t\t %5d \n", i,pid[i],BT[i],waittime[i],tnartm[i]);
}
printf("\n The average Waiting Time=%f",Awaittime);
printf("\n The average Turn around Time=%f",Atnartm);
getch();
}         

